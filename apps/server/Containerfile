# Build stage - Use Bun to compile the binary
FROM oven/bun:1 AS builder
WORKDIR /usr/src/app

# Copy package files
COPY package.json bun.lockb* ./

# Install dependencies
RUN bun install --frozen-lockfile

# Copy source code
COPY . .

# Build the binary (statically linked)
RUN bun run compile

# Runtime stage - Use Alpine for minimal size with utilities
FROM alpine:3.19 AS runtime

# Create user (no additional packages needed)
RUN addgroup -g 1001 -S appuser \
    && adduser -S -D -H -u 1001 -h /app -s /sbin/nologin -G appuser -g appuser appuser

# Set working directory
WORKDIR /app

# Copy the compiled binary
COPY --from=builder /usr/src/app/server ./server

# Change ownership and make executable
RUN chown appuser:appuser ./server && chmod +x ./server

# Switch to non-root user
USER appuser

# Expose port
EXPOSE 3000

# Run the binary
ENTRYPOINT ["./server"]
